# Generated by Django 5.1.2 on 2025-01-14 23:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='TimetableGenerationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed')], max_length=20)),
                ('message', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TeacherPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_classes_per_day', models.PositiveIntegerField(default=4, help_text='Maximum number of classes the teacher can handle per day')),
                ('health_limitations', models.TextField(blank=True, help_text='Any health constraints for the teacher', null=True)),
                ('additional_preferences', models.JSONField(blank=True, default=dict, help_text='Additional or unknown preferences (stored as key-value pairs)', null=True)),
                ('unavailable_days', models.CharField(blank=True, help_text="Days when the teacher is unavailable (e.g., 'Monday, Wednesday')", max_length=100, null=True)),
                ('preferred_rooms', models.ManyToManyField(blank=True, related_name='preferred_by_teachers', to='users.room')),
                ('preferred_subjects', models.ManyToManyField(blank=True, related_name='preferred_by_teachers', to='users.course')),
                ('teacher', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to='users.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='Constraint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(max_length=10)),
                ('is_hard_constraint', models.BooleanField(default=True, help_text='If true, this is a hard constraint that must be followed.')),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.batch')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.course')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.room')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.section')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.teacher')),
                ('time_slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advisors.timeslot')),
            ],
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_slot', models.CharField(max_length=50)),
                ('day_of_week', models.CharField(max_length=10)),
                ('locked', models.BooleanField(default=False)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.batch')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.course')),
                ('room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.room')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.section')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.teacher')),
            ],
        ),
    ]
